import { execSync } from 'child_process';
import { writeFileSync } from 'fs';
import { join } from 'path';

// Get the Supabase URL and key from environment variables or the client file
const supabaseUrl = "https://wyjocbqbdyqecyrmbjyw.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind5am9jYnFiZHlxZWN5cm1ianl3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2NjI4MDYsImV4cCI6MjA2OTIzODgwNn0.uYwWyVESbQlgI5TTogV9UosF6rYu_X311F-O1k_umME";

// Generate types using the Supabase CLI
console.log('Generating types...');
try {
  execSync(
    `npx supabase gen types typescript --project-id "${supabaseUrl}" --schema public > src/integrations/supabase/types.ts`,
    { stdio: 'inherit' }
  );
  console.log('Types generated successfully!');
} catch (error) {
  console.error('Error generating types:', error);
  process.exit(1);
}

// Update the client.ts file with the correct types
try {
  const clientPath = join(__dirname, '../src/integrations/supabase/client.ts');
  const clientContent = `// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "${supabaseUrl}";
const SUPABASE_PUBLISHABLE_KEY = "${supabaseKey}";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});
`;
  writeFileSync(clientPath, clientContent);
  console.log('Client file updated successfully!');
} catch (error) {
  console.error('Error updating client file:', error);
  process.exit(1);
}

console.log('Setup complete!');
